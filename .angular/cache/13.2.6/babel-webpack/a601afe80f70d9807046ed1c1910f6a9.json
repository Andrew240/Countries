{"ast":null,"code":"import { DataTableDirective } from 'angular-datatables';\nimport { FILTERS } from '@shared/country/country';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/api.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@ng-select/ng-select\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"angular-datatables\";\n\nfunction TableComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 11)(2, \"input\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function TableComponent_div_7_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.search($event);\n    })(\"ngModelChange\", function TableComponent_div_7_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.string_value = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function TableComponent_div_7_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.searchByFilter(ctx_r5.string_value, ctx_r5.selectedFilter);\n    });\n    i0.ɵɵtext(4, \"Buscar\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.string_value);\n  }\n}\n\nfunction TableComponent_ng_container_39_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\")(18, \"a\", 15);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(19, \"svg\", 16);\n    i0.ɵɵelement(20, \"path\", 17)(21, \"path\", 18);\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const country_r7 = ctx.$implicit;\n    const i_r8 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r8 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(country_r7.name.common);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(country_r7.capital ? country_r7.capital.toString() : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(country_r7.region);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(country_r7.subregion);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(country_r7.area);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(country_r7.population);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(country_r7.flag);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"href\", country_r7.maps.googleMaps, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction TableComponent_ng_container_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TableComponent_ng_container_39_tr_1_Template, 22, 9, \"tr\", 14);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.countries);\n  }\n}\n\nexport let TableComponent = /*#__PURE__*/(() => {\n  class TableComponent {\n    constructor(api, toastr) {\n      this.api = api;\n      this.toastr = toastr;\n      this.dtOptions = {}; // We use this trigger because fetching the list of persons can be quite long,\n      // thus we ensure the data is fetched before rendering\n\n      this.dtTrigger = new Subject();\n      this.countries = [];\n      this.data = [];\n      this.string_value = '';\n      this.array_values = [];\n      this.filters = [];\n    }\n\n    ngOnInit() {\n      this.dtOptions = {\n        pagingType: 'full_numbers',\n        pageLength: 10,\n        lengthMenu: [[10], [10]],\n        responsive: true,\n\n        /* below is the relevant part, e.g. translated to spanish */\n        language: {\n          processing: \"Procesando...\",\n          search: \"Buscar:\",\n          lengthMenu: \"Mostrar _MENU_ elementos\",\n          info: \"Mostrando desde _START_ al _END_ de _TOTAL_ elementos\",\n          infoEmpty: \"Mostrando ningún elemento.\",\n          infoFiltered: \"(filtrado _MAX_ elementos total)\",\n          infoPostFix: \"\",\n          loadingRecords: \"Cargando registros...\",\n          zeroRecords: \"No se encontraron registros\",\n          emptyTable: \"No hay datos disponibles en la tabla\",\n          paginate: {\n            first: \"Primero\",\n            previous: \"Anterior\",\n            next: \"Siguiente\",\n            last: \"Último\"\n          },\n          aria: {\n            sortAscending: \": Activar para ordenar la tabla en orden ascendente\",\n            sortDescending: \": Activar para ordenar la tabla en orden descendente\"\n          }\n        }\n      }; // Set filter types\n\n      for (let index in FILTERS['types']) {\n        let object = FILTERS['types'][index];\n        this.filters.push({\n          label: object['label'],\n          value: object['value']\n        });\n      }\n\n      this.getAllCountries();\n    }\n\n    ngAfterViewInit() {\n      this.dtTrigger.next();\n    }\n\n    ngOnDestroy() {\n      // Do not forget to unsubscribe the event\n      this.dtTrigger.unsubscribe();\n    }\n\n    rerender() {\n      this.dtElement.dtInstance.then(dtInstance => {\n        // Destroy the table first\n        dtInstance.destroy(); // Call the dtTrigger to rerender again\n\n        this.dtTrigger.next();\n      });\n    } // Get all countries\n\n\n    getAllCountries() {\n      this.api.getAll().subscribe(resp => {\n        this.countries = this.data = resp;\n        this.rerender();\n      });\n    } // Set string value\n\n\n    search(event) {\n      this.string_value = event;\n    } // Set select filter\n\n\n    select(event) {\n      this.string_value = \"\";\n      this.selectedFilter = event;\n\n      if (this.selectedFilter == null) {\n        this.resetCountries();\n      }\n    } // Get country by specific filter\n\n\n    searchByFilter(event, filter) {\n      // Set value and remove white spaces\n      let string_value = event.replace(/\\s/g, '');\n\n      if (string_value && filter) {\n        if (filter == 'name') {\n          this.api.getByName(string_value).subscribe(resp => {\n            this.countries = resp;\n            this.rerender();\n            this.showSuccess();\n          }, error => {\n            console.log(error);\n            this.countries = [];\n            this.rerender();\n            this.showWarning();\n          });\n        }\n\n        if (filter == 'full_name') {\n          this.api.getByFullName(string_value).subscribe(resp => {\n            this.countries = resp;\n            this.rerender();\n            this.showSuccess();\n          }, error => {\n            console.log(error);\n            this.countries = [];\n            this.rerender();\n            this.showWarning();\n          });\n        }\n\n        if (filter == 'code') {\n          this.api.getByCode(string_value).subscribe(resp => {\n            this.countries = resp;\n            this.rerender();\n            this.showSuccess();\n          }, error => {\n            console.log(error);\n            this.countries = [];\n            this.rerender();\n            this.showWarning();\n          });\n        }\n\n        if (filter == 'code_list') {\n          let code_list = string_value.split(',');\n          this.api.getByCodeList(code_list).subscribe(resp => {\n            this.countries = resp;\n            this.rerender();\n            this.showSuccess();\n          }, error => {\n            console.log(error);\n            this.countries = [];\n            this.rerender();\n            this.showWarning();\n          });\n        }\n\n        if (filter == 'currency') {\n          this.api.getByCurrency(string_value).subscribe(resp => {\n            this.countries = resp;\n            this.rerender();\n            this.showSuccess();\n          }, error => {\n            console.log(error);\n            this.countries = [];\n            this.rerender();\n            this.showWarning();\n          });\n        }\n\n        if (filter == 'language') {\n          this.api.getByLanguage(string_value).subscribe(resp => {\n            this.countries = resp;\n            this.rerender();\n            this.showSuccess();\n          }, error => {\n            console.log(error);\n            this.countries = [];\n            this.rerender();\n            this.showWarning();\n          });\n        }\n\n        if (filter == 'translation') {\n          this.api.getByTranslation(string_value).subscribe(resp => {\n            this.countries = resp;\n            this.rerender();\n            this.showSuccess();\n          }, error => {\n            console.log(error);\n            this.countries = [];\n            this.rerender();\n            this.showWarning();\n          });\n        }\n\n        if (filter == 'capital') {\n          this.api.getByCapital(string_value).subscribe(resp => {\n            this.countries = resp;\n            this.rerender();\n            this.showSuccess();\n          }, error => {\n            console.log(error);\n            this.countries = [];\n            this.rerender();\n            this.showWarning();\n          });\n        }\n\n        if (filter == 'region') {\n          this.api.getByRegion(string_value).subscribe(resp => {\n            this.countries = resp;\n            this.rerender();\n            this.showSuccess();\n          }, error => {\n            console.log(error);\n            this.countries = [];\n            this.rerender();\n            this.showWarning();\n          });\n        }\n\n        if (filter == 'subregion') {\n          this.api.getBySubregion(string_value).subscribe(resp => {\n            this.countries = resp;\n            this.rerender();\n            this.showSuccess();\n          }, error => {\n            console.log(error);\n            this.countries = [];\n            this.rerender();\n            this.showWarning();\n          });\n        }\n\n        if (filter == 'demonym') {\n          this.api.getByDemonym(string_value).subscribe(resp => {\n            this.countries = resp;\n            this.rerender();\n            this.showSuccess();\n          }, error => {\n            console.log(error);\n            this.countries = [];\n            this.rerender();\n            this.showWarning();\n          });\n        }\n      } else {\n        this.showInfo();\n        this.resetCountries();\n      }\n    } // Success message\n\n\n    showSuccess() {\n      this.toastr.success('Se encontraron datos', 'Consulta exitosa!', {\n        timeOut: 3000,\n        positionClass: 'toast-top-center'\n      });\n    } // Warning message\n\n\n    showWarning() {\n      this.toastr.warning('No se encontraron datos', 'Consulta erronea!', {\n        timeOut: 3000,\n        positionClass: 'toast-top-center'\n      });\n    } // Info message\n\n\n    showInfo() {\n      this.toastr.info('No puede ir vacio', 'Consulta erronea!', {\n        timeOut: 3000,\n        positionClass: 'toast-top-center'\n      });\n    } // Reset countries list\n\n\n    resetCountries() {\n      this.string_value = \"\";\n      this.countries = this.data;\n      this.rerender();\n    }\n\n  }\n\n  TableComponent.ɵfac = function TableComponent_Factory(t) {\n    return new (t || TableComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.ToastrService));\n  };\n\n  TableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TableComponent,\n    selectors: [[\"app-table\"]],\n    viewQuery: function TableComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(DataTableDirective, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dtElement = _t.first);\n      }\n    },\n    decls: 40,\n    vars: 6,\n    consts: [[1, \"container\", \"mt-4\", \"mb-4\"], [1, \"table-responsive\"], [1, \"form-group\", \"row\", \"mb-4\"], [1, \"col-lg-3\", \"col-md-12\", \"col-sm-12\", \"col-form-label\"], [1, \"col-lg-4\", \"col-md-6\", \"col-sm-6\", \"col-12\", \"mb-3\"], [\"placeholder\", \"Selecciona un tipo de filtro\", \"bindLabel\", \"label\", \"bindValue\", \"value\", 3, \"items\", \"ngModel\", \"ngModelChange\"], [\"class\", \"col-lg-4 col-md-6 col-sm-6 col-12\", 4, \"ngIf\"], [\"datatable\", \"\", 1, \"table\", \"row-border\", \"hover\", 3, \"dtOptions\", \"dtTrigger\"], [1, \"m-r-10\"], [4, \"ngIf\"], [1, \"col-lg-4\", \"col-md-6\", \"col-sm-6\", \"col-12\"], [1, \"input-group\"], [\"placeholder\", \"Introduce tu busqueda...\", \"type\", \"text\", \"name\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-dark\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [\"target\", \"_blank\", 1, \"link-dark\", 3, \"href\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"width\", \"16\", \"height\", \"16\", \"fill\", \"currentColor\", \"viewBox\", \"0 0 16 16\", 1, \"bi\", \"bi-pin-map-fill\"], [\"fill-rule\", \"evenodd\", \"d\", \"M3.1 11.2a.5.5 0 0 1 .4-.2H6a.5.5 0 0 1 0 1H3.75L1.5 15h13l-2.25-3H10a.5.5 0 0 1 0-1h2.5a.5.5 0 0 1 .4.2l3 4a.5.5 0 0 1-.4.8H.5a.5.5 0 0 1-.4-.8l3-4z\"], [\"fill-rule\", \"evenodd\", \"d\", \"M4 4a4 4 0 1 1 4.5 3.969V13.5a.5.5 0 0 1-1 0V7.97A4 4 0 0 1 4 3.999z\"]],\n    template: function TableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"label\", 3);\n        i0.ɵɵtext(4, \"Realizar una consulta al API\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"ng-select\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function TableComponent_Template_ng_select_ngModelChange_6_listener($event) {\n          return ctx.select($event);\n        })(\"ngModelChange\", function TableComponent_Template_ng_select_ngModelChange_6_listener($event) {\n          return ctx.selectedFilter = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(7, TableComponent_div_7_Template, 5, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"table\", 7)(9, \"thead\")(10, \"tr\")(11, \"th\")(12, \"span\", 8);\n        i0.ɵɵtext(13, \"#\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"th\")(15, \"span\", 8);\n        i0.ɵɵtext(16, \"Nombre\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"th\")(18, \"span\", 8);\n        i0.ɵɵtext(19, \"Capital\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"th\")(21, \"span\", 8);\n        i0.ɵɵtext(22, \"Regi\\u00F3n\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"th\")(24, \"span\", 8);\n        i0.ɵɵtext(25, \"Subregi\\u00F3n\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"th\")(27, \"span\", 8);\n        i0.ɵɵtext(28, \"\\u00C1rea\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"th\")(30, \"span\", 8);\n        i0.ɵɵtext(31, \"Poblaci\\u00F3n\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"th\")(33, \"span\", 8);\n        i0.ɵɵtext(34, \"Bandera\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"th\")(36, \"span\", 8);\n        i0.ɵɵtext(37, \"Mapa\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(38, \"tbody\");\n        i0.ɵɵtemplate(39, TableComponent_ng_container_39_Template, 2, 1, \"ng-container\", 9);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"items\", ctx.filters)(\"ngModel\", ctx.selectedFilter);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedFilter);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"dtOptions\", ctx.dtOptions)(\"dtTrigger\", ctx.dtTrigger);\n        i0.ɵɵadvance(31);\n        i0.ɵɵproperty(\"ngIf\", ctx.countries.length > 0);\n      }\n    },\n    directives: [i3.NgSelectComponent, i4.NgControlStatus, i4.NgModel, i5.NgIf, i4.DefaultValueAccessor, i6.DataTableDirective, i5.NgForOf],\n    styles: [\"\"]\n  });\n  return TableComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}